name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        ruff check .
    
    - name: Format check with black
      run: |
        black --check .
    
    - name: Type check with mypy
      run: |
        mypy .
    
    - name: Run unit tests
      run: |
        python -m pytest tests/unit/ -v --cov=src --cov-report=xml
    
    - name: Run integration tests
      run: |
        python -m pytest tests/integration/ -v
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  smoke-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run CPU smoke test with expected metrics
      run: |
        # Run a short training session and check expected metrics
        python -m pytest tests/integration/test_train_smoke.py -v -s
    
    - name: Test experiment tracking (offline mode)
      run: |
        # Test that experiment tracking works in offline mode
        langlab train --steps 50 --k 3 --v 8 --message-length 1 --seed 42 \
          --tracking-project test-project \
          --tracking-experiment-name smoke-test \
          --tracking-tags "smoke,ci" \
          --tracking-notes "CI smoke test run"
    
    - name: Verify outputs
      run: |
        # Check that expected files were created
        ls -la outputs/
        ls -la outputs/logs/
        ls -la outputs/checkpoints/
        
        # Check that metrics file exists and has expected content
        if [ -f "outputs/logs/metrics.csv" ]; then
          echo "Metrics file created successfully"
          head -5 outputs/logs/metrics.csv
        else
          echo "ERROR: Metrics file not found"
          exit 1
        fi
        
        # Check that checkpoint was created
        if [ -f "outputs/checkpoints/checkpoint.pt" ]; then
          echo "Checkpoint file created successfully"
        else
          echo "ERROR: Checkpoint file not found"
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: [test, smoke-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*